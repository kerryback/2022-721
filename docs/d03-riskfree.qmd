---
title:  "Saving and Borrowing"
author: <br>BUSI 721<br>Jones Graduate School of Business<br>Rice University<br><br>Kerry Back
output-dir: docs
execute:
  echo: false
  jupyter: python3
  cache: true
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    slide-number: true
    preview-links: true
    self-contained: true
    controls: true
    transition: fade
    theme: [solarized, 721.scss]
    incremental: true
    scrollable: true
---

## Saving

- Uninvested funds should earn money market rate.
- $n$ risky assets, $w_i$ = weights, $x_s$ = fraction of portfolio earning money market rate

. . .

$$x_s = 1 - \sum_{i=1}^n w_i$$

## Expected return and risk

- Let $r_s$ = money market rate (saving rate)
- portfolio expected return is $x_sr_s + \bar{r}^\top w$
- portfolio variance is still $w^\top C w$

## Fully invested portfolio

- Because $\sum w_i < 1$, we can view $(w_1, \ldots, w_n)$ as a scaled down version of a fully-invested portfolio.
- $x_s$ in savings and $1-x_s$ in the fully invested portfolio
  - $\hat{w}_i = w_i/(1-x_s)$ are the fully invested weights
  - $\sum \hat{w}_i = \sum w_i/(1-x_s) = 1$
  - $w_i = (1-x_s)\hat{w}_i$

## Risk premium and Sharpe ratio

- For any asset or portfolio, expected return minus $r_s$ is called its [risk premium]{style="color:tomato; font-weight:bold;"}
  - It is compensation for risk.
- (expected return - $r_s$) / std dev is called the [Sharpe ratio]{style="color:tomato; font-weight:bold;"}
  - It is the reward-to-risk ratio.

## Portfolio Risk premium

- weights $w_i = (1-x_s)\hat{w}_i$ where $\sum \hat{w}_i=1$
- risk premium is 

. . .

$$x_sr_s + (1-x_s)\sum_{i=1}^n \hat{w}_i \bar{r}_i - r_s$$

- This is $(1-x_s)\left[\sum_{i=1}^n \hat{w}_i \bar{r}_i - r_s\right]$

## Standard deviation and Sharpe ratio

- variance is $(1-x_s)\hat{w}^\top C \hat{w}(1-x_s)$
- std dev is $(1-x_s)\sqrt{\hat{w}^\top C \hat{w}}$

- So, $1-x_s$ is in both numerator and denominator of Sharpe ratio.  Sharpe ratio doesn't depend on $x_s$





## Example

. . .

$r_s$ = 2%. Fully invested portfolio has $\bar{r}$ = 10%, std dev = 15%.  

. . .

```{python}
import numpy as np
import plotly.graph_objects as go

mn = 0.10
sd = 0.15
rf = 0.02
trace1 = go.Scatter(
  x=[0],
  y=[rf],
  mode="markers",
  name="saving rate",
  hovertemplate="saving rate %{y:.0%}<extra></extra>",
  marker=dict(size=15)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(0,1,11)
mns = rf + (mn-rf)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=1-grid,
    mode="lines",
    hovertemplate="saving = %{text:.1%}<extra></extra>",
    name="portfolios"
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```

Line is set of (std dev, mean) pairs generated by $0 \le x_s \le 1$.  Slope is Sharpe ratio.

## Borrowing (Margin loans)

- $x_b \ge 0$ is fraction borrowed, $r_b$ = borrowing rate
- portfolio expected return is $w^\top \bar{r} - x_br_b$
- portfolio variance is still $w^\top C w$
- weights are $w_i = (1+x_b)\hat{w}_i$ for a fully invested portfolio $\hat{w}$
- portfolio mean is $(1+x_b)\bar{r}^\top \hat w - x_br_b$ and std dev is $(1+x_b)\sqrt{\hat{w}^\top C \hat{w}}$
- Sharpe ratio (mean - $r_b$) / std dev is invariant to $x_b$


## Example

. . .

$r_b$ = 5%. Fully invested portfolio has $\bar{r}$ = 10%, std dev = 15%.  

. . .

```{python}
import plotly.io as pio

plotly_template = pio.templates["plotly_dark"]
colors = plotly_template.layout.colorway
blue = colors[0]
red = colors[1]
green = colors[2]
purple = colors[3]

mn = 0.10
sd = 0.15
rf = 0.05
trace1 = go.Scatter(
  x=[0],
  y=[rf],
  mode="markers",
  name="borrowing rate",
  hovertemplate="borrowing rate %{y:.0%}<extra></extra>",
  marker=dict(size=15, color=purple)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(1, 2,11)
mns = rf + (mn-rf)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid - 1,
    mode="lines",
    hovertemplate="borrowing = %{text:.1%}<extra></extra>",
    name="portfolios"
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```

Line is set of (std dev, mean) pairs generated by $0 \le x_b \le 1$.  Slope is Sharpe ratio at borrowing rate.

## Saving and borrowing opportunities

. . .

$r_s$ = 2% and $r_b$ = 5%. Fully invested portfolio has $\bar{r}$ = 10%, std dev = 15%.  

. . .

```{python}
mn = 0.10
sd = 0.15
rs = 0.02
rb = 0.05

trace1 = go.Scatter(
  x=[0],
  y=[rs],
  mode="markers",
  name="saving rate",
  hovertemplate="saving rate %{y:.0%}<extra></extra>",
  marker=dict(size=15)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(0, 1, 11)
mns = rs + (mn-rs)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=1-grid,
    mode="lines",
    hovertemplate="saving = %{text:.1%}<extra></extra>",
    name="portfolios"
)

trace4 = go.Scatter(
  x=[0],
  y=[rb],
  mode="markers",
  name="borrowing rate",
  hovertemplate="borrowing rate %{y:.0%}<extra></extra>",
  marker=dict(size=15, color=purple)
)

grid = np.linspace(1, 2,11)
mns = rb + (mn-rb)*grid
sds = sd*grid

trace5 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid-1,
    mode="lines",
    hovertemplate="borrowing = %{text:.1%}<extra></extra>",
    line=dict(color=green),
    showlegend=False
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3, trace4, trace5):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```

Opportunities for $0\le x_s \le 1$ or $0 \le x_b \le 1$. 


