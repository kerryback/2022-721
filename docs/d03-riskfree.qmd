---
title:  "Saving and Borrowing"
author: <br>BUSI 721<br>Jones Graduate School of Business<br>Rice University<br><br>Kerry Back
output-dir: docs
execute:
  echo: false
  jupyter: python3
  cache: true
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    slide-number: true
    preview-links: true
    self-contained: true
    transition: fade
    theme: [solarized, 721.scss]
    incremental: true
    scrollable: true
---

## Saving

- Funds can be kept as "cash," earning money market rate.
- $n$ risky assets, $w_i$ = weights, $x_s \ge 0$ = fraction saved

. . .

$$x_s + \sum_{i=1}^n w_i = 1$$

- $r_s$ = money market rate (saving rate)
- portfolio expected return is $x_sr_s + w^\top \bar{r}$
- portfolio variance is still $w^\top C w$

## Single risky asset

- $w$ = risky asset allocation, $\bar{r}$ = mean, $\sigma$ = std dev
- $x_s = 1-w$
- portfolio expected return is

. . .

$$ (1-w)r_s + w \bar{r} = r_s + (\bar{r}-r_s)x_s$$

- portfolio standard deviation is $\sigma w$

## Mean -- Standard Deviation Plot

- $\bar{r}$ = 10%, $\sigma$ = 15%, $r_s$ = 2%

. . .

```{python}
import numpy as np
import plotly.graph_objects as go

mn = 0.10
sd = 0.15
rf = 0.02
trace1 = go.Scatter(
  x=[0],
  y=[rf],
  mode="markers",
  name="saving rate",
  hovertemplate="saving rate %{y:.0%}<extra></extra>",
  marker=dict(size=15)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(0,1,11)
mns = rf + (mn-rf)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid,
    mode="lines",
    hovertemplate="wt on risky asset = %{text:.1%}<extra></extra>",
    name="portfolios"
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```

- slope is Sharpe ratio $(\bar{r}-r_s)/\sigma$

## Borrowing (Margin loans)

- $x_b \ge 0$ is fraction borrowed, $r_b$ = borrowing rate
- portfolio expected return is $w^\top \bar{r} - x_br_b$
- portfolio variance is still $w^\top C w$
- with single risky asset, $x_b = w-1$
  - portfolio expected return is

. . .

  $$w \bar{r} - (w-1)r_b = r_b + (\bar{r}-r_b)w$$

  - portfolio standard deviation is $\sigma w$



## Mean -- Standard Deviation Plot

- $\bar{r}$ = 10%, $\sigma$ = 15%, $r_b$ = 5%

. . .

```{python}
import numpy as np
import plotly.graph_objects as go
import plotly.io as pio

plotly_template = pio.templates["plotly_dark"]
colors = plotly_template.layout.colorway
blue = colors[0]
red = colors[1]
green = colors[2]
purple = colors[3]

mn = 0.10
sd = 0.15
rf = 0.05
trace1 = go.Scatter(
  x=[0],
  y=[rf],
  mode="markers",
  name="borrowing rate",
  hovertemplate="borrowing rate %{y:.0%}<extra></extra>",
  marker=dict(size=15, color=purple)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(1, 2,11)
mns = rf + (mn-rf)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid,
    mode="lines",
    hovertemplate="wt on risky asset = %{text:.1%}<extra></extra>",
    name="portfolios"
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```


- slope is Sharpe ratio $(\bar{r}-r_b)/\sigma$

## Saving and borrowing opportunities

- $\bar{r}$ = 10%, $\sigma$ = 15%, $r_s$ = 2%, $r_b$ = 5%

. . .

```{python}
import numpy as np
import plotly.graph_objects as go
import plotly.io as pio

plotly_template = pio.templates["plotly_dark"]
colors = plotly_template.layout.colorway
blue = colors[0]
red = colors[1]
green = colors[2]
purple = colors[3]

mn = 0.10
sd = 0.15
rs = 0.02
rb = 0.05

trace1 = go.Scatter(
  x=[0],
  y=[rs],
  mode="markers",
  name="saving rate",
  hovertemplate="saving rate %{y:.0%}<extra></extra>",
  marker=dict(size=15)
)

trace2 = go.Scatter( 
  x=[sd],
  y=[mn],
  mode="markers",
  name="risky asset",
  hovertemplate="risky asset<br>mean=%{y:.0%}<br>std dev=%{x:.0%}<extra></extra>",
  marker=dict(size=15)
)

grid = np.linspace(0, 1, 11)
mns = rs + (mn-rs)*grid
sds = sd*grid

trace3 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid,
    mode="lines",
    hovertemplate="wt on risky asset = %{text:.1%}<extra></extra>",
    name="portfolios"
)

trace4 = go.Scatter(
  x=[0],
  y=[rb],
  mode="markers",
  name="borrowing rate",
  hovertemplate="borrowing rate %{y:.0%}<extra></extra>",
  marker=dict(size=15, color=purple)
)

grid = np.linspace(1, 2,11)
mns = rb + (mn-rb)*grid
sds = sd*grid

trace5 = go.Scatter( 
    x=sds,
    y=mns,
    text=grid,
    mode="lines",
    hovertemplate="wt on risky asset = %{text:.1%}<extra></extra>",
    line=dict(color=green),
    showlegend=False
)

fig = go.Figure() 
for trace in (trace1, trace2, trace3, trace4, trace5):
    fig.add_trace(trace)

fig.update_layout(
    template="plotly_dark",
    xaxis_title="Standard Deviation",
    yaxis_title="Mean",
    yaxis_tickformat=".0%",
    xaxis_tickformat=".0%",
    width=1040,
    height=400,
    legend=dict(
        yanchor="bottom", 
        y=0.01, 
        xanchor="right", 
        x=0.99
    )
  )
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```


- slopes are Sharpe ratios $(\bar{r}-r_s)/\sigma$ and $(\bar{r}-r_b)/\sigma$

