---
title:  "Long-Run Risk"
author: <br>BUSI 721, Fall 2022<br>JGSB, Rice University<br><br>Kerry Back
output-dir: docs
execute:
  echo: false
  jupyter: python3
  cache: true
format: 
  revealjs:
    highlight-style: monokai
    code-fold: true
    slide-number: true
    preview-links: true
    self-contained: true
    transition: fade
    theme: [solarized, 721.scss]
    incremental: true
---

#

:::: {.columns}

::: {.column width=60}
<br>

A common belief is that the law of averages will rule in the long run, eliminating risk. 

<br>

It's true that the average outcome from a gamble should not be risky in the long run.
:::

::: {.column width=40}

<br>

<img src="images/dice.jpg" height=400>
:::

::::

. . .

<br>

But the gain or loss from gambling is
average gain per gamble $\times$ number of gambles.

## Betting on the stock market

- Based on history, the bet is definitely in our favor.  We have much better odds than in a casino.

- If we play for a long time, we will almost certainly come out ahead.

- But how far ahead is quite uncertain.

    - In the [worst 20-year period]{style="color:tomato; font-weight:bold"} in the U.S. stock market since 1926, [\$1 $\rightarrow$ \$1.73]{style="color:tomato; font-weight:bold"}, a geometric average return of [2.8% per year] (1929-1948).
    - In the [best 20-year period]{style="color:tomato; font-weight:bold"} since 1926, [\$1 $\rightarrow$ \$24.65]{style="color:tomato; font-weight:bold"}, a geometric average return of 17.4% per year (1980-1999).

#

<p align=center> 
<a href="http://bbcx-investments.com/risk/best-worst"><img src="images/Rice_Owl.jpg" style="width:4in;"></a>
</p>


## Simulate returns

- Mean and std dev of U.S. market return 1970-2021 was 12.5% and 17.4%.
- Simulate 20-year compounded returns.

. . .

```{.p code-line-numbers="1-4|6|7"}
import numpy as np

mn = 0.125
sd = 0.174
nyears = 20

r = np.random.normal(loc=mn, scale=sd, size=nyears)
comp_ret = np.prod(1+r)
```

## Repeat and evaluate the distribution

```{.p code-line-numbers="1|3-4|5"}
nsims = 1000

r = np.random.normal(loc=mn, scale=sd, size=nyears*nsims)
r = r.reshape((nyears, nsims))
comp_ret = np.prod(1+r, axis=0)
```

. . .


:::: columns

::: column 

```{python}

import numpy as np
import plotly.graph_objects as go

mn = 0.125
sd = 0.174
nsims = 1000

r = np.random.normal(loc=mn, scale=sd, size=30*nsims)
r = r.reshape((30,1000))
comp_ret = np.prod(1+r, axis=0)

trace = go.Box(
  y=comp_ret,
  name="",
  hovertemplate="%{text}<extra></extra>",
)
fig = go.Figure(trace)
fig.update_layout(
    template="plotly_dark",
    yaxis_title="Accumulation from $1",
    xaxis_title="",
    yaxis_tickprefix="$",
    yaxis_tickformat=".0f",
    xaxis_tickformat="",
    width=1040,
    height=520
)
fig.update_xaxes(title_font_size=24)
fig.update_yaxes(title_font_size=24)
fig.update_layout(font_size=20)
fig.show()
```

:::

::: column

<br>

```{python}

import pandas as pd
comp_ret = pd.Series(comp_ret)
table = comp_ret.describe(percentiles=[0.1,0.25,0.5,0.75,0.9])
print(table.iloc[1:].round(2))
```
:::

::::


## Retirement Planning Simulation


:::: {.columns}

::: {.column width=50}

Uncertainty about long-run returns $\Rightarrow$ uncertainty about retirement plans.

<br>

We can revisit the retirement plan, but

<br> 

generate random returns and simulate many lifetimes.

:::

::: {.column width=50}
<img src="images/retirement-concept-2021-08-28-19-21-53-utc.jpg" height=500>
:::


::::

# 

<p align=center> 
<a href="https://bbcx-investments.com/borrowing-saving/retirement-planning-sim"><img src="images/Rice_Owl.jpg"  style="width:4in;"></a>
</p>

